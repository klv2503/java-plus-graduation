services:
  kafka:
    image: confluentinc/confluent-local:7.4.3
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092" # для подключения collector/tester
      - "9101:9101" # JMX
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      CLUSTER_ID: 'K0EA9p0yEe6MkAAAAkKsEg'

  kafka-init-topics:
    image: confluentinc/confluent-local:7.4.3
    container_name: kafka-init-topics
    depends_on:
      - kafka
    command: "bash -c '\
                   kafka-topics --bootstrap-server kafka:29092 --delete --topic stats.user-actions.v1 || true && \
                   kafka-topics --bootstrap-server kafka:29092 --create --topic stats.user-actions.v1 --partitions 1 --replication-factor 1 && \
                   kafka-topics --bootstrap-server kafka:29092 --delete --topic stats.events-similarity.v1 || true && \
                   kafka-topics --bootstrap-server kafka:29092 --create --topic stats.events-similarity.v1 --partitions 1 --replication-factor 1'"

    init: true

  postgres:
    image: postgres:16.1
    container_name: postgres-ewm
    hostname: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    ports:
      - "6543:5432"
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      interval: 5s
      retries: 10
      timeout: 5s

  db_init:
    image: postgres:16.1
    container_name: db-init-ewm
    depends_on:
      postgres:
        condition: service_healthy
# Здесь взял за образец то, что было на вебинаре. Пока оставляю
    entrypoint:
      - bash
      - -c
      - |
        set -e
        psql postgresql://user:password@postgres:5432/postgres -v ON_ERROR_STOP=1 <<-EOSQL
          DROP DATABASE IF EXISTS ewm_db;
          DROP DATABASE IF EXISTS ewm_stats;
          DROP DATABASE IF EXISTS user_db;
          DROP DATABASE IF EXISTS request_db; 
          DROP DATABASE IF EXISTS event_db; 
          DROP DATABASE IF EXISTS comment_db; 
          DROP DATABASE IF EXISTS category_db; 
          create database ewm_db;
          create database ewm_stats;
          create database user_db;
          create database request_db;
          create database event_db;
          create database comment_db;
          create database category_db;
          grant all privileges on database ewm_db to "user";
          grant all privileges on database ewm_stats to "user";
          grant all privileges on database user_db to "user";
          grant all privileges on database request_db to "user";
          grant all privileges on database event_db to "user";
          grant all privileges on database comment_db to "user";
          grant all privileges on database category_db to "user";
        EOSQL
